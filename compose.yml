version: '3.8'

services:

  nextapp:
    container_name: nextapp
    image: nextapp:1.0.0
    build:
      context: ./frontend
      dockerfile: next.dockerfile
    ports:
      - "3000:3000"
    environment:
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - NEXT_PUBLIC_API=http://localhost:4000
    depends_on:
      - flaskapp

  # flask service
  flaskapp:
    container_name: flaskapp
    image: flaskapp:1.0.0
    build:
      context: ./backend
      dockerfile: flask.dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "while ! pg_isready -h db -p 5432 -U postgres; do sleep 1; done &&
             python run.py"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4000/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # db service
  db:
    container_name: db
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata: {}
